/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiAndController;

import Database.DBInventoryInterface;
import Database.DBPurchaseInterface;
import Model.Inventory;
import Model.Purchase;
import java.awt.FileDialog;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import translators.DateList;
import translators.ExcelFile;
import translators.PurchaseApapter;
import translators.InventoryApapter;

/**
 *
 * @author luod1
 */
public class Gui_purchase extends javax.swing.JFrame {

    public static Purchase purchase;
    private List<Purchase> list;
    private List<Purchase> findList;
    private String[] columnTitle = {"Id", "产品编号", "名称", "成本单价", "进货数量",
        "单位", "进货日期", "货商", "总价成本", "是否已入库(Y/N)"};

    DBPurchaseInterface PurchaseInterface = new PurchaseApapter();
    DBInventoryInterface InventoryInterface = new InventoryApapter();

    /**
     * Creates new form Gui_purchase
     */
    public Gui_purchase() {

        initComponents();
        quaryAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtb_purchase = new javax.swing.JTable();
        jbt_add = new javax.swing.JButton();
        jbt_update = new javax.swing.JButton();
        jbt_delete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jtf_findProductCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jbt_addStorage = new javax.swing.JButton();
        jbt_exportExcel = new javax.swing.JButton();
        jbt_inventory = new javax.swing.JButton();
        jbt_sales = new javax.swing.JButton();
        jbt_purchase = new javax.swing.JButton();
        jbt_showAll = new javax.swing.JButton();
        jlb_InStorgeStatus = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jbt_product = new javax.swing.JButton();
        jbt_earn = new javax.swing.JButton();
        jbt_return = new javax.swing.JButton();
        jbt_other = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel1.setText("进货管理");

        jtb_purchase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "产品编号", "名称", "成本单价", "进货数量", "单位", "进货日期", "供货商", "总价成本", "入库状态"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtb_purchase);

        jbt_add.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jbt_add.setText("增加");
        jbt_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_addActionPerformed(evt);
            }
        });

        jbt_update.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jbt_update.setText("修改");
        jbt_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_updateActionPerformed(evt);
            }
        });

        jbt_delete.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jbt_delete.setText("删除");
        jbt_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_deleteActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton4.setText("查找");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jtf_findProductCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_findProductCodeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel2.setText("输入产品编号：");

        jbt_addStorage.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jbt_addStorage.setText("产品入库");
        jbt_addStorage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_addStorageActionPerformed(evt);
            }
        });

        jbt_exportExcel.setText("导出EXCEL");
        jbt_exportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_exportExcelActionPerformed(evt);
            }
        });

        jbt_inventory.setText("商品库存管理");
        jbt_inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_inventoryActionPerformed(evt);
            }
        });

        jbt_sales.setText("商品销售管理");
        jbt_sales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_salesActionPerformed(evt);
            }
        });

        jbt_purchase.setText("商品进货管理");

        jbt_showAll.setText("显示全部进货");
        jbt_showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_showAllActionPerformed(evt);
            }
        });

        jLabel3.setText("选择一个产品，点击入库");

        jbt_product.setText("商品信息管理");
        jbt_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_productActionPerformed(evt);
            }
        });

        jbt_earn.setText("利润计算");

        jbt_return.setText("退货");

        jbt_other.setText("其他支出");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_findProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbt_add, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbt_update, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbt_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbt_showAll, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbt_addStorage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbt_exportExcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlb_InStorgeStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbt_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbt_sales, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbt_purchase)
                        .addGap(18, 18, 18)
                        .addComponent(jbt_earn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbt_return, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbt_other)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbt_product)
                        .addGap(14, 14, 14))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jbt_add)
                .addGap(18, 18, 18)
                .addComponent(jbt_update)
                .addGap(18, 18, 18)
                .addComponent(jbt_delete)
                .addGap(18, 18, 18)
                .addComponent(jbt_showAll)
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtf_findProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbt_addStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlb_InStorgeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbt_exportExcel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_inventory)
                    .addComponent(jbt_sales)
                    .addComponent(jbt_purchase)
                    .addComponent(jbt_product)
                    .addComponent(jbt_earn)
                    .addComponent(jbt_return)
                    .addComponent(jbt_other))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtf_findProductCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_findProductCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_findProductCodeActionPerformed

    private void jbt_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_addActionPerformed
        // TODO add your handling code here:
        new Gui_OnePurchase().setVisible(true);
        dispose();
    }//GEN-LAST:event_jbt_addActionPerformed

    private void jbt_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_updateActionPerformed
        // TODO add your handling code here:
        try {
            int i = this.jtb_purchase.getSelectedRow();
            String statusYN = this.jtb_purchase.getValueAt(i, 9).toString();
            if ("Y".equals(statusYN)) {
                JOptionPane.showMessageDialog(null, "已入库，无法修改");
            } else {
                int key = Integer.valueOf(this.jtb_purchase.getValueAt(i, 0).toString());
                // save the selected habit information at object habit
                for (int k = 0; k < this.list.size(); k++) {
                    if (this.list.get(k).getId() == key) {
                        purchase = this.list.get(k);
                    }
                }
                Gui_OnePurchase.rowId = key;
                new Gui_OnePurchase().setVisible(true);
                dispose();
            }
            //set habit information at modify habit frame 

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "请选择表格中需要修改的一行");

        }
    }//GEN-LAST:event_jbt_updateActionPerformed

    private void jbt_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_deleteActionPerformed
        // TODO add your handling code here:
        delete();
        quaryAll();
    }//GEN-LAST:event_jbt_deleteActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        find();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jbt_showAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_showAllActionPerformed
        // TODO add your handling code here:
        quaryAll();
    }//GEN-LAST:event_jbt_showAllActionPerformed

    private void jbt_addStorageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_addStorageActionPerformed
        // TODO add your handling code here:
        inStorage();

    }//GEN-LAST:event_jbt_addStorageActionPerformed

    private void jbt_inventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_inventoryActionPerformed
        // TODO add your handling code here:
        new Gui_inventory().setVisible(true);
        dispose();
    }//GEN-LAST:event_jbt_inventoryActionPerformed

    private void jbt_salesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_salesActionPerformed
        // TODO add your handling code here:
        new Gui_sales().setVisible(true);
        dispose();
    }//GEN-LAST:event_jbt_salesActionPerformed

    private void jbt_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_productActionPerformed
        // TODO add your handling code here:
        new Gui_product_Info().setVisible(true);
        dispose();
    }//GEN-LAST:event_jbt_productActionPerformed

    private void jbt_exportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_exportExcelActionPerformed
        // TODO add your handling code here:
        FileDialog fd = new FileDialog(this, "保存产品进货记录", FileDialog.SAVE);
        fd.setVisible(true);
        String stringfile = fd.getDirectory() + fd.getFile() + ".xls";
        try {
            ExcelFile export = new ExcelFile();
            export.exportTable(jtb_purchase, new File(stringfile));
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jbt_exportExcelActionPerformed

    private boolean addStorage() {
        int i = this.jtb_purchase.getSelectedRow();
        int key = Integer.valueOf(this.jtb_purchase.getValueAt(i, 0).toString());
        String ProductCode = this.jtb_purchase.getValueAt(i, 1).toString();
        Purchase p = PurchaseInterface.getPurchaseKey(key);
        Inventory y = InventoryInterface.findOne(ProductCode);
        // System.out.println(y);
        int id = p.getId();
        String code = p.getProductCode();
        String name = p.getName();
        String unit = p.getUnit();
        BigDecimal recentPurchasePrice = p.getPrice();

        Date storeDate = new Date();
        if (y.getProductCode() == null) {
            int stock = p.getQuantity();
            BigDecimal averageCost = p.getPrice();

            Inventory newY = new Inventory(id, code, name, unit, stock, recentPurchasePrice, averageCost, storeDate);
            boolean insert = InventoryInterface.insertInventory(newY);

            return insert;
        } else {
            //System.out.println("old stock: "+ y.getStock()+"new quantity: "+ p.getQuantity());
            int stoc = y.getStock() + p.getQuantity();

            BigDecimal holdP = y.getRecentPurchasePrice().add(p.getPrice());
            BigDecimal averageP = holdP.divide(new BigDecimal(2));
            Inventory oldY = new Inventory(id, code, name, unit, stoc, recentPurchasePrice, averageP, storeDate);
            boolean update = InventoryInterface.updatePurchase(oldY);

            return update;
        }

    }

    private boolean isInventory() {
        boolean flag;
        int i = this.jtb_purchase.getSelectedRow();
        String statusYN = this.jtb_purchase.getValueAt(i, 9).toString();

        if ("Y".equals(statusYN)) {

            return flag = true;
        } else {
            return flag = false;
        }
    }

    private void inStorage() {
        // String statusFlag = "Y";
        int i = this.jtb_purchase.getSelectedRow();

        int key = Integer.valueOf(this.jtb_purchase.getValueAt(i, 0).toString());

        if (isInventory()) {
            JOptionPane.showMessageDialog(null, "此产品已入库!");

        } else {

            if (addStorage()) {
                boolean status = PurchaseInterface.activeStatus(key);
                JOptionPane.showMessageDialog(null, "入库成功!");

            } else {

                JOptionPane.showMessageDialog(null, "入库失败!");

            }

            quaryAll();

        }

    }

    public void quaryAll() {
        list = PurchaseInterface.getAll();
        if (list == null) {
            JOptionPane.showMessageDialog(null, "system error！");
            return;
        }

        Object[][] data = DateList.listToArray(list);

        DefaultTableModel tableModel = new DefaultTableModel(data, this.columnTitle) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.jtb_purchase.setModel(tableModel);
    }

    private void delete() {
        int i = this.jtb_purchase.getSelectedRow();
        int key = Integer.valueOf(this.jtb_purchase.getValueAt(i, 0).toString());
        if (isInventory()) {
            JOptionPane.showMessageDialog(null, "此产品已入库，无法删除!");

        } else {
            boolean remove = this.PurchaseInterface.deletePurchase(key);
            if (remove) {
                JOptionPane.showMessageDialog(null, "delete success!");
                return;
            } else {
                JOptionPane.showMessageDialog(null, "delete fail!");
            }
        }

        quaryAll();
    }

    private void find() {
        findList = PurchaseInterface.findPurchase(this.jtf_findProductCode.getText());
        if (findList == null) {
            JOptionPane.showMessageDialog(null, "system error！");
            return;
        }
        Object[][] data = DateList.listToArray(findList);

        DefaultTableModel tableModel = new DefaultTableModel(data, this.columnTitle) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.jtb_purchase.setModel(tableModel);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui_purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui_purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui_purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui_purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui_purchase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbt_add;
    private javax.swing.JButton jbt_addStorage;
    private javax.swing.JButton jbt_delete;
    private javax.swing.JButton jbt_earn;
    private javax.swing.JButton jbt_exportExcel;
    private javax.swing.JButton jbt_inventory;
    private javax.swing.JButton jbt_other;
    private javax.swing.JButton jbt_product;
    private javax.swing.JButton jbt_purchase;
    private javax.swing.JButton jbt_return;
    private javax.swing.JButton jbt_sales;
    private javax.swing.JButton jbt_showAll;
    private javax.swing.JButton jbt_update;
    private javax.swing.JLabel jlb_InStorgeStatus;
    private javax.swing.JTable jtb_purchase;
    private javax.swing.JTextField jtf_findProductCode;
    // End of variables declaration//GEN-END:variables
}
